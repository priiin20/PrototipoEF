<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="tltAyuda.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAABx2AAAcdgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAACAAAAAAAAACgAAADJAAAAxgAAAMUAAADMAAAATQAAAAAAAAAFAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAQAAAAEAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQgAAAP8AAAD9AAAA+wAAAP8AAACtAAAAAAAA
        AAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABBAAAA/wAAAPoAAAD5AAAA/wAA
        AKsAAAAAAAAApAAAALYAAACwAAAAsQAAALEAAACxAAAAsQAAALEAAACxAAAAsQAAALAAAACYAAAAWwAA
        AA8AAAAAAAAAAwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEEAAAD/AAAA/QAA
        APsAAAD/AAAArAAAAAAAAADqAAAA/wAAAP4AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAD/AAAA6gAAAGUAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAQQAA
        AP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAAOcAAAD/AAAA+gAAAPwAAAD8AAAA/AAAAPwAAAD8AAAA/AAA
        APwAAAD8AAAA+wAAAPwAAAD9AAAA/wAAAJYAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAA
        AAAAAABBAAAA/wAAAP0AAAD7AAAA/wAAAKwAAAAAAAAA6gAAAP8AAAD+AAAA/wAAAP0AAAD7AAAA+wAA
        APsAAAD7AAAA+wAAAP0AAAD/AAAA/wAAAP0AAAD5AAAA/wAAAHkAAAAAAAAAAwAAAAAAAAAAAAAAAAAA
        AAAAAAADAAAAAAAAAEEAAAD/AAAA/QAAAPsAAAD/AAAArAAAAAAAAADqAAAA/wAAAP4AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAPwAAAD/AAAA/wAAAP4AAAD/AAAA9QAAACUAAAAAAAAAAgAA
        AAAAAAAAAAAAAAAAAAMAAAAAAAAAQQAAAP8AAAD9AAAA+wAAAP8AAACsAAAAAAAAAOkAAAD/AAAA/AAA
        AP8AAADFAAAAeQAAAIIAAACBAAAAfwAAAJgAAADlAAAA/wAAAP0AAAD/AAAA/wAAAPsAAAD/AAAAiwAA
        AAAAAAAEAAAAAAAAAAAAAAAAAAAAAwAAAAAAAABBAAAA/wAAAP0AAAD7AAAA/wAAAKwAAAAAAAAA6wAA
        AP8AAAD5AAAA/wAAAIcAAAADAAAAFgAAABMAAAAUAAAABAAAAAkAAAChAAAA/wAAAPwAAAD/AAAA/gAA
        AP8AAADmAAAAEQAAAAAAAAABAAAAAAAAAAAAAAADAAAAAAAAAEEAAAD/AAAA/QAAAPsAAAD/AAAArAAA
        AAAAAADKAAAA/wAAAPwAAAD7AAAA/wAAAP8AAAD/AAAA/wAAAP8AAADzAAAAJwAAAAAAAAC6AAAA/wAA
        APoAAAD+AAAA+gAAAP8AAABhAAAAAAAAAAQAAAAAAAAAAAAAAAMAAAAAAAAAQQAAAP8AAAD5AAAA9wAA
        AP8AAACvAAAAAAAAAAIAAABlAAAA+gAAAP8AAAD+AAAA/wAAAP8AAAD9AAAA/wAAAN4AAAAQAAAAAAAA
        ADEAAAD6AAAA/wAAAP4AAAD7AAAA/wAAAGkAAAAAAAAABAAAAAAAAAAAAAAAAwAAAAAAAABBAAAA/wAA
        AP0AAAD7AAAA/wAAAJ4AAAAAAAAABQAAAAAAAAA6AAAAvQAAAOcAAADnAAAA5wAAAOkAAADIAAAAMgAA
        AAAAAAAEAAAAAAAAAE8AAADWAAAA6AAAAO0AAACsAAAACgAAAAAAAAABAAAAAAAAAAAAAAABAAAAAAAA
        ABEAAABrAAAAbQAAAGwAAABsAAAAGgAAAAAAAAACAAAAAwAAAAAAAAAAAAAACQAAAA0AAAANAAAADAAA
        AAEAAAAAAAAAAQAAAAAAAAABAAAAAAAAAAMAAAANAAAACwAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAQAAAAEAAAABAAAABAAAAAMAAAAAAAAAAAAA
        AAAAAAAAAAAAAgAAAAMAAAABAAAAAQAAAAEAAAAEAAAAAgAAAAAAAAAAAAAAAgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAABAAAABAAAAAUAAAADAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAALAAAACwAAAAsAAAALAAAACwAA
        AAsAAAALAAAACwAAAAIAAAAEAAAADAAAAAsAAAALAAAACwAAAAsAAAALAAAACwAAAAsAAAAFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAAAAAAhAAAA3AAAAOgAAADlAAAA5gAA
        AOYAAADmAAAA5gAAAOQAAADzAAAALQAAAE8AAAD4AAAA4wAAAOYAAADmAAAA5gAAAOYAAADlAAAA7AAA
        AMoAAAANAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAAAAAAEAAAAD/AAAA/QAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/QAAAP8AAAAyAAAAVwAAAP8AAAD7AAAA/wAAAP8AAAD/AAAA/wAA
        AP4AAAD/AAAA+wAAACMAAAAAAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAAAPwAA
        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
        AAQgBAAEkAAACVABgAGoAAAV1AAAK+l//pc=
</value>
  </data>
</root>